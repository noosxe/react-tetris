load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
load("@npm_bazel_terser//:index.bzl", "terser_minified")
load("@npm//html-insert-assets:index.bzl", "html_insert_assets")
load("@build_bazel_rules_nodejs//:index.bzl", "pkg_web")
load("@npm//serve:index.bzl", "serve")

rollup_bundle(
    name = "bundle",
    config_file = "rollup.config.js",
    entry_point = "//app:index.tsx",
    format = "esm",
    deps = [
        "//app",
        "@npm//@rollup/plugin-commonjs",
        "@npm//@rollup/plugin-node-resolve",
        "@npm//@rollup/plugin-replace",
        "@npm//react",
        "@npm//react-dom",
        "@npm//react-router-dom",
        "@npm//redux",
        "@npm//redux-devtools-extension",
        "@npm//redux-saga",
    ],
)

terser_minified(
    name = "bundle.min",
    src = ":bundle",
)

_ASSETS = [
    ":bundle.min",
]

html_insert_assets(
    name = "inject_tags",
    outs = ["index.html"],
    args = [
        "--out=$@",
        "--html=$(execpath :index.tmpl.html)",
        "--roots=$(RULEDIR)",
        "--assets",
    ] + ["$(execpaths %s)" % a for a in _ASSETS],
    data = [":index.tmpl.html"] + _ASSETS,
)

pkg_web(
    name = "package",
    srcs = [":inject_tags"] + _ASSETS,
)

serve(
    name = "prodserver",
    data = [":package"],
    templated_args = ["package"],
)

exports_files(
    ["tsconfig.json"],
    visibility = ["//:__subpackages__"],
)
